// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <3 1>;
            then-layer = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q            &kp W                &kp E                &kp R         &kp T        &kp Y        &kp U         &kp I                 &kp O                 &kp P
&hrm LEFT_ALT A  &hrm LEFT_CONTROL S  &hrm LEFT_COMMAND D  &hrm LSHFT F  &kp G        &kp H        &hrm RSHFT J  &hrm RIGHT_COMMAND K  &hrm RIGHT_CONTROL L  &hrm RIGHT_ALT SEMICOLON
&kp Z            &kp X                &kp C                &kp V         &kp B        &kp N        &kp M         &kp COMMA             &kp DOT               &kp FSLH
                                                           &lt 3 SPACE   &lt 4 TAB    &lt 1 ENTER  &lt 2 BSPC
            >;
        };

        symbols {
            bindings = <
&kp EXCL   &kp AT    &kp HASH         &kp DLLR  &kp PRCNT    &kp LPAR  &kp RPAR  &kp UNDERSCORE  &kp PLUS   &kp TILDE
&kp CARET  &kp AMPS  &kp KP_ASTERISK  &kp LPAR  &kp RPAR     &kp LBRC  &kp RBRC  &kp MINUS       &kp EQUAL  &kp GRAVE
&trans     &trans    &trans           &kp BSLH  &kp PIPE     &kp LBKT  &kp RBKT  &kp LT          &kp GT     &trans
                                      &trans    &trans       &trans    &trans
            >;
        };

        numbers {
            bindings = <
&kp N1   &kp N2   &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &kp F12  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                          &trans  &trans    &trans  &trans
            >;
        };

        navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PG_UP  &kp PG_DN  &kp END    &kp INS
&trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans    &trans    &trans     &trans     &trans     &trans
                        &trans  &trans    &trans    &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans            &kp C_BRIGHTNESS_DEC  &kp C_BRI_UP     &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &kp K_MUTE        &kp C_VOLUME_DOWN     &kp C_VOLUME_UP  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans            &kp C_PREV            &kp C_NEXT       &trans  &trans
                             &trans      &trans          &kp C_PLAY_PAUSE  &trans
            >;
        };
    };
};
